//////////////////////////////////////////////////////////////////////////////////////////////
// 
// VMAT Optimization Script
//
// Author: Mark Geurts, mark.geurts@aspirus.org
// Date: August 9, 2018
// Validated: Pinnacle Version 9.8
//
// Description: this script runs a cold start followed by four warm starts and a segment weight
// optimization. The optimization, segment weight and final dose are all computed at a fine 
// resolution (2mm). This script is modeled after the optimization scripts developed by Ed 
// Bender at the University of Wisconsin.
//
//////////////////////////////////////////////////////////////////////////////////////////////

// Define adjustable parameters
Store.FloatAt.OptimizationRes = 0.2;     // Optimization resolution, in mm
Store.FloatAt.SegWeightRes = 0.2;        // Segment weight and final resolution, in mm
Store.FloatAt.MaxIter = 120;             // Max iterations for cold start
Store.FloatAt.DoseIter = 60;             // Convolution dose iteration for cold starts
Store.FloatAt.MaxIterWS = 50;            // Max iterations for warm starts
Store.FloatAt.MaxIterSW = 50;            // Max iterations for final segment weight opt

// Optionally allow user to edit inputs
//WindowList.MyStoreEditor.CreateStoreEditor = "Store.Address";
//WindowList.MyStoreEditor.Unrealize = "";
//WindowList.MyStoreEditor.IsModal = 1;
//WindowList.MyStoreEditor.Create = "";

PluginManager.InversePlanningManager.DoseEngineManager.CurrentName = "TPBDoseEngine";
PluginManager.InversePlanningManager.ActiveWindow = WindowList.IMRT.Address;

// Set iterations and stopping tolerance for initial optimization
PluginManager.InversePlanningManager.OptimizationManager.Current.TrialList.Current.MaxIterations = Store.FloatAt.MaxIter;
PluginManager.InversePlanningManager.TrialList.Current.DoseIteration = Store.FloatAt.DoseIter;
PluginManager.InversePlanningManager.OptimizationManager.Current.TrialList.Current.OptimalityTolerance = "1e-20";
PluginManager.InversePlanningManager.TrialList.Current.ComputeIntermediateDose = 1;
PluginManager.InversePlanningManager.TrialList.Current.ComputeFinalDose = 1;
PluginManager.InversePlanningManager.TrialList.Current.FineResolutionODM = 1;

// Set dose grid to coarse
TrialList.Current.DoseGrid.VoxelSize.X = Store.FloatAt.OptimizationRes;
TrialList.Current.DoseGrid.VoxelSize.Y = Store.FloatAt.OptimizationRes;
TrialList.Current.DoseGrid.VoxelSize.Z = Store.FloatAt.OptimizationRes;

// Set arc parameters
TrialList.Current.BeamList.#"#0".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#1".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#2".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#3".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#4".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#5".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#6".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#7".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#8".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#9".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#10".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#11".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#12".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#13".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#14".IMRTParameterType = "SmartArc";
TrialList.Current.BeamList.#"#15".IMRTParameterType = "SmartArc";

// Reset beams
PluginManager.InversePlanningManager.ResetBeamsForIMRT = "Reset Beams";

// Run cold start
WaitMessage = "Running cold start VMAT optimization...";
PluginManager.InversePlanningManager.Initialize = "Start Optimization";

// Execute warm starts 
PluginManager.InversePlanningManager.OptimizationManager.Current.TrialList.Current.MaxIterations = Store.FloatAt.MaxIterWS;

WaitMessage = "Running 1 of 4 warm start optimizations...";
PluginManager.InversePlanningManager.Initialize = "Start Optimization";

WaitMessage = "Running 2 of 4 warm start optimizations...";
PluginManager.InversePlanningManager.Initialize = "Start Optimization";

WaitMessage = "Running 3 of 4 warm start optimizations...";
PluginManager.InversePlanningManager.Initialize = "Start Optimization";

WaitMessage = "Running 4 of 4 warm start optimizations...";
PluginManager.InversePlanningManager.Initialize = "Start Optimization";

// Switch to segment weight and run final optimization
TrialList.Current.BeamList.#"#0".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#1".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#2".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#3".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#4".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#5".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#6".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#7".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#8".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#9".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#10".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#11".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#12".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#13".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#14".IMRTParameterType = "Segment Weight";
TrialList.Current.BeamList.#"#15".IMRTParameterType = "Segment Weight";

// Set dose grid to fine
TrialList.Current.DoseGrid.VoxelSize.X = Store.FloatAt.SegWeightRes;
TrialList.Current.DoseGrid.VoxelSize.Y = Store.FloatAt.SegWeightRes;
TrialList.Current.DoseGrid.VoxelSize.Z = Store.FloatAt.SegWeightRes;

PluginManager.InversePlanningManager.OptimizationManager.Current.TrialList.Current.MaxIterations = Store.FloatAt.MaxIterSW;

WaitMessage = "Running final segment weight optimization...";
PluginManager.InversePlanningManager.Initialize = "Start Optimization";

// Clean up
Store.FreeAt.OptimizationRes = "";
Store.FreeAt.SegWeightRes = "";
Store.FreeAt.MaxIter = "";
Store.FreeAt.DoseIter = "";
Store.FreeAt.MaxIterWS = "";
Store.FreeAt.MaxIterSW = "";